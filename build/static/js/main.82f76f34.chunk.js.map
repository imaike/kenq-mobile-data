{
  "version": 3,
  "sources": [
    "state.js",
    "Admin/Admin.jsx",
    "Statements/Statements.jsx",
    "Presort/NegativeButton.jsx",
    "Presort/PositiveButton.jsx",
    "Presort/UncertainButton.jsx",
    "Presort/StatementList.jsx",
    "Presort/Presort.jsx",
    "App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "store",
    "setState",
    "update",
    "updateKeys",
    "Object",
    "keys",
    "i",
    "length",
    "this",
    "getState",
    "value",
    "returnValue",
    "cloneDeep",
    "displayAdmin",
    "displayStatements",
    "displayDemonstration",
    "displayData",
    "displayDelete",
    "displayPresort",
    "displaySort",
    "displayPostsort",
    "displaySurvey",
    "handleButtonClick",
    "e",
    "console",
    "log",
    "target",
    "id",
    "buttonId",
    "state",
    "Admin",
    "props",
    "_this$props",
    "projectName",
    "email",
    "react_default",
    "a",
    "createElement",
    "PageContainer",
    "Column1",
    "Column1Button",
    "onClick",
    "Column2",
    "Column2Button",
    "Column3",
    "htmlFor",
    "type",
    "name",
    "defaultValue",
    "BeginQsortButton",
    "ResultsSection",
    "ResultsTitle",
    "ResultsDiv",
    "Component",
    "view",
    "fadeIn",
    "keyframes",
    "_templateObject",
    "fadeOut",
    "_templateObject2",
    "styled",
    "div",
    "_templateObject3",
    "out",
    "_templateObject4",
    "_templateObject5",
    "_templateObject6",
    "button",
    "_templateObject7",
    "_templateObject8",
    "_templateObject9",
    "_templateObject10",
    "_templateObject11",
    "_templateObject12",
    "handleClick",
    "Statements",
    "columnStatements",
    "statementList",
    "Statements_PageContainer",
    "HeaderDiv",
    "NavButStatements",
    "map",
    "item",
    "key",
    "statementNum",
    "statement",
    "Statements_templateObject",
    "Statements_templateObject2",
    "Statements_templateObject3",
    "Statements_templateObject4",
    "Statements_templateObject5",
    "NegativeButton",
    "border",
    "NegativeButtonWithBorder",
    "index",
    "NegativeButtonNoBorder",
    "NegativeButton_templateObject",
    "NegativeButton_templateObject2",
    "PositiveButton",
    "PositiveButtonWithBorder",
    "PositiveButtonNoBorder",
    "PositiveButton_templateObject",
    "PositiveButton_templateObject2",
    "UncertainButton",
    "UncertainButtonWithBorder",
    "UncertainButtonNoBorder",
    "UncertainButton_templateObject",
    "UncertainButton_templateObject2",
    "handleClickNewButton",
    "forceUpdate",
    "statements",
    "slice",
    "idArray",
    "split",
    "colorType",
    "cardColor",
    "divColor",
    "sortValue",
    "greenChecked",
    "pinkChecked",
    "yellowChecked",
    "toConsumableArray",
    "localStorage",
    "setItem",
    "JSON",
    "stringify",
    "StatementList",
    "className",
    "concat",
    "style",
    "display",
    "marginRight",
    "Presort_NegativeButton",
    "Presort_UncertainButton",
    "Presort_PositiveButton",
    "PreSort",
    "_this",
    "titleText",
    "nextButtonText",
    "Presort_PageContainer",
    "TitleDiv",
    "Presort_NavButStatements",
    "Presort_StatementList",
    "Presort_templateObject",
    "Presort_templateObject2",
    "Presort_templateObject3",
    "Presort_templateObject4",
    "Presort_templateObject5",
    "App",
    "adminData",
    "preSortData",
    "App_PageContainer",
    "src_Admin_Admin",
    "assign",
    "src_Statements_Statements",
    "Presort",
    "App_templateObject",
    "Boolean",
    "window",
    "location",
    "hostname",
    "match",
    "xhttp",
    "XMLHttpRequest",
    "data",
    "onreadystatechange",
    "readyState",
    "status",
    "parse",
    "responseText",
    "ReactDOM",
    "render",
    "src_App_0",
    "document",
    "getElementById",
    "open",
    "process",
    "send",
    "navigator",
    "serviceWorker",
    "ready",
    "then",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.82f76f34.chunk.js",
  "sourcesContent": [
    "import cloneDeep from 'lodash/cloneDeep';\nimport { store } from 'react-easy-state';\n\nexport default store({\n  setState(update) {\n    const updateKeys = Object.keys(update);\n    for (let i = 0; i < updateKeys.length; i += 1) {\n      this[updateKeys[i]] = update[updateKeys[i]];\n    }\n  },\n\n  getState(value) {\n    const returnValue = this[value];\n    const newReturnValue = cloneDeep(returnValue);\n    return newReturnValue;\n  },\n  /* App */\n  displayAdmin: true,\n  displayStatements: false,\n  displayDemonstration: false,\n  displayData: false,\n  displayDelete: false,\n  displayPresort: false,\n  displaySort: false,\n  displayPostsort: false,\n  displaySurvey: false,\n\n  /* Admin */\n});\n",
    "import React, { Component } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { view } from 'react-easy-state';\n// import PropTypes from 'prop-types';\nimport state from '../state';\n\n/* eslint react/prop-types: 0 */\n\nconst handleButtonClick = e => {\n  console.log(e.target.id);\n  const buttonId = e.target.id;\n  if (buttonId === 'StatementsButton') {\n    state.setState({ displayAdmin: false, displayStatements: true });\n  }\n  if (buttonId === 'goButton') {\n    state.setState({ displayAdmin: false, displayPresort: true });\n  }\n};\n\nclass Admin extends Component {\n  render() {\n    console.log('TCL: Admin -> render -> props', this.props);\n    const { projectName, email } = this.props;\n    return (\n      <PageContainer>\n        <Column1>\n          <Column1Button id=\"emailButton\" onClick={handleButtonClick}>\n            Email Results\n          </Column1Button>\n          <Column1Button id=\"informationButton\" onClick={handleButtonClick}>\n            Information\n          </Column1Button>\n        </Column1>\n        <Column2>\n          <Column2Button id=\"deleteButton\" onClick={handleButtonClick}>\n            Delete Data\n          </Column2Button>\n          <Column2Button id=\"StatementsButton\" onClick={handleButtonClick}>\n            Statements\n          </Column2Button>\n        </Column2>\n        <Column3>\n          <label htmlFor=\"projectNameInput\">\n            Project Name:\n            <input\n              id=\"projectNameInput\"\n              type=\"text\"\n              name=\"projectName\"\n              defaultValue={projectName}\n            />\n          </label>\n          <label htmlFor=\"emailAddressInput\">\n            Email Address:\n            <input\n              id=\"emailAddressInput\"\n              type=\"text\"\n              name=\"email\"\n              defaultValue={email}\n            />\n          </label>\n        </Column3>\n        <BeginQsortButton id=\"goButton\" onClick={handleButtonClick}>\n          Q\n        </BeginQsortButton>\n        <ResultsSection>\n          <ResultsTitle>Results</ResultsTitle>\n          <ResultsDiv />\n        </ResultsSection>\n      </PageContainer>\n    );\n  }\n}\n\nexport default view(Admin);\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst PageContainer = styled.div`\n  display: grid;\n  justify-items: center;\n  grid-template-columns: 341px 342px 342px 341px;\n  grid-template-rows: 350px auto;\n  width: 1366px;\n  height: 1004px;\n  background-color: #323232;\n  color: white;\n  padding-top: 20px;\n  visibility: ${props => (props.out ? 'hidden' : 'visible')};\n  animation: ${props => (props.out ? fadeOut : fadeIn)} 0.2s linear;\n  transition: visibility 1s linear;\n`;\n\nconst Column1 = styled.div`\n  grid-column-start: 1;\n  grid-row-start: 1;\n  /* border: 2px solid yellow; */\n`;\n\nconst Column2 = styled.div`\n  grid-column-start: 2;\n  grid-row-start: 1;\n  /* border: 2px solid yellow; */\n`;\n\nconst Column3 = styled.div`\n  width: 250px;\n  grid-column-start: 3;\n  grid-row-start: 1;\n  /* border: 2px solid yellow; */\n\n  input {\n    width: 250px;\n    font-size: 20px;\n    margin-bottom: 30px;\n  }\n`;\n\nconst Column1Button = styled.button`\n  position: relative;\n  font-family: HelveticaNeue-CondensedBlack, Arial, Helvetica, sans-serif;\n  appearance: none;\n  height: 140px;\n  width: 250px;\n  margin-left: 45px;\n  margin-bottom: 15px;\n  margin-top: 10px;\n  color: #323232;\n  background: #1985c5;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  border: 0px solid #666;\n  font-size: 300%;\n  text-align: center;\n  line-height: 1em;\n\n  &:active {\n    background-color: #146a9d;\n  }\n`;\n\nconst Column2Button = styled.button`\n  position: relative;\n  font-family: HelveticaNeue-CondensedBlack, Arial, Helvetica, sans-serif;\n  appearance: none;\n  width: 250px;\n  height: 140px;\n  margin-top: 10px;\n  margin-bottom: 15px;\n  margin-left: 46px;\n  color: #323232;\n  background: #1985c5;\n  border: 0px solid #666;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  font-size: 300%;\n  text-align: center;\n  line-height: 1.05em;\n\n  &:active {\n    background-color: #146a9d;\n  }\n`;\n\nconst BeginQsortButton = styled.button`\n  appearance: none;\n  position: relative;\n  font-family: HelveticaNeue-CondensedBlack, Arial, Helvetica, sans-serif;\n  margin-left: 5px;\n  width: 250px;\n  margin-top: 2px;\n  height: 250px;\n  background: #55b262;\n  color: #323232;\n  font-weight: 900;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  grid-column-start: 4;\n  grid-row-start: 1;\n  font-size: 1300%;\n  text-align: center;\n  user-select: none;\n  border: 0px solid black;\n  outline: none;\n\n  p {\n    margin: 0;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  &:active {\n    background-color: #448e4e;\n  }\n`;\n\nconst ResultsSection = styled.div`\n  margin-top: 50px;\n  grid-column-start: 1;\n  grid-column-end: 5;\n  grid-row-start: 2;\n  /* border: 2px solid red; */\n`;\n\nconst ResultsTitle = styled.div`\n  font-size: 30px;\n`;\n\nconst ResultsDiv = styled.div`\n  height: 480px;\n  width: 1270px;\n  background: whitesmoke;\n`;\n",
    "import React, { Component } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { view } from 'react-easy-state';\nimport state from '../state';\n\n/* eslint react/prop-types: 0 */\n\nconst handleClick = () => {\n  console.log('clicked');\n  state.setState({ displayAdmin: true, displayStatements: false });\n};\n\nclass Statements extends Component {\n  render() {\n    const { columnStatements } = this.props;\n    const { statementList } = columnStatements;\n    console.log('TCL: Statements -> render -> statementList', columnStatements);\n\n    return (\n      <PageContainer>\n        <HeaderDiv>\n          <h1>Statements</h1>\n          <NavButStatements onClick={handleClick}>Return</NavButStatements>\n        </HeaderDiv>\n        <ol>\n          {statementList.map(item => (\n            <li key={item.statementNum}>{item.statement}</li>\n          ))}\n        </ol>\n      </PageContainer>\n    );\n  }\n}\n\nexport default view(Statements);\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst PageContainer = styled.div`\n  width: 1366px;\n  height: 1004px;\n  background-color: #323232;\n  color: whitesmoke;\n  padding: 20px;\n  visibility: ${props => (props.out ? 'hidden' : 'visible')};\n  animation: ${props => (props.out ? fadeOut : fadeIn)} 0.2s linear;\n  transition: visibility 1s linear;\n`;\n\nconst NavButStatements = styled.button`\n  position: relative;\n  font-family: HelveticaNeue-CondensedBlack, Arial, Helvetica, sans-serif;\n  appearance: none;\n  height: 40px;\n  width: 100px;\n  margin-left: 45px;\n  margin-top: 20px;\n  color: #323232;\n  background: #1985c5;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  border: 0px solid #666;\n  font-size: 150%;\n  text-align: center;\n  line-height: 1em;\n\n  &:active {\n    background-color: #146a9d;\n  }\n`;\n\nconst HeaderDiv = styled.div`\n  display: flex;\n  align-items: end;\n`;\n",
    "import React from \"react\";\nimport styled from \"styled-components\";\n\nconst NegativeButton = props => {\n  if (props.border) {\n    return (\n      <NegativeButtonWithBorder\n        id={\"pink-\" + props.index}\n        onClick={props.onClick}\n      >\n        -\n      </NegativeButtonWithBorder>\n    );\n  } else {\n    return (\n      <NegativeButtonNoBorder\n        id={\"pink-\" + props.index}\n        onClick={props.onClick}\n      >\n        -\n      </NegativeButtonNoBorder>\n    );\n  }\n};\n\nexport default NegativeButton;\n\nconst NegativeButtonWithBorder = styled.button`\n  background-color: lightpink;\n  box-sizing: border-box;\n  font-size: 25px;\n  font-weight: bold;\n  width: 40px;\n  height: 35px;\n  border: 3px solid black;\n`;\n\nconst NegativeButtonNoBorder = styled.button`\n  background-color: lightpink;\n  font-size: 25px;\n  box-sizing: border-box;\n  font-weight: normal;\n  width: 40px;\n  height: 35px;\n`;\n",
    "import React from \"react\";\nimport styled from \"styled-components\";\n\nconst PositiveButton = props => {\n  if (props.border) {\n    return (\n      <PositiveButtonWithBorder\n        id={\"green-\" + props.index}\n        onClick={props.onClick}\n      >\n        +\n      </PositiveButtonWithBorder>\n    );\n  } else {\n    return (\n      <PositiveButtonNoBorder\n        id={\"green-\" + props.index}\n        onClick={props.onClick}\n      >\n        +\n      </PositiveButtonNoBorder>\n    );\n  }\n};\n\nexport default PositiveButton;\n\nconst PositiveButtonWithBorder = styled.button`\n  background-color: #c7f6c7;\n  box-sizing: border-box;\n  font-size: 25px;\n  font-weight: bold;\n  width: 40px;\n  height: 35px;\n  border: 3px solid black;\n`;\n\nconst PositiveButtonNoBorder = styled.button`\n  background-color: #c7f6c7;\n  font-size: 25px;\n  box-sizing: border-box;\n  font-weight: normal;\n  width: 40px;\n  height: 35px;\n`;\n",
    "import React from \"react\";\nimport styled from \"styled-components\";\n\nconst UncertainButton = props => {\n  if (props.border) {\n    return (\n      <UncertainButtonWithBorder\n        id={\"yellow-\" + props.index}\n        onClick={props.onClick}\n      >\n        ?\n      </UncertainButtonWithBorder>\n    );\n  } else {\n    return (\n      <UncertainButtonNoBorder\n        id={\"yellow-\" + props.index}\n        onClick={props.onClick}\n      >\n        ?\n      </UncertainButtonNoBorder>\n    );\n  }\n};\n\nexport default UncertainButton;\n\nconst UncertainButtonWithBorder = styled.button`\n  background-color: rgba(211, 211, 211, 0.6);\n  box-sizing: border-box;\n  font-size: 25px;\n  font-weight: bold;\n  width: 40px;\n  height: 35px;\n  border: 3px solid black;\n`;\n\nconst UncertainButtonNoBorder = styled.button`\n  background-color: rgba(211, 211, 211, 0.6);\n  font-size: 25px;\n  box-sizing: border-box;\n  font-weight: normal;\n  width: 40px;\n  height: 35px;\n`;\n",
    "import React from \"react\";\nimport \"./StatementList.css\";\nimport state from \"../state\";\n// import { useStore } from \"easy-peasy\";\nimport NegativeButton from \"./NegativeButton\";\nimport PositiveButton from \"./PositiveButton\";\nimport UncertainButton from \"./UncertainButton\";\n// import { useStore } from \"easy-peasy\";\n\n/* eslint react/prop-types: 0 */\n\nconst handleClickNewButton = (e, forceUpdate, columnStatements) => {\n  // const columnStatements = store.getState().columnStatements;\n  const statements2 = columnStatements.statementList;\n  const statements = statements2.slice();\n  // let random = Math.floor(Math.random() * (9 - 0 + 1)) + 0;\n  const idArray = e.target.id.split(\"-\");\n  const colorType = idArray[0];\n  const id = idArray[1];\n  if (colorType === \"green\") {\n    statements[id].cardColor = \"greenSortCard\";\n    statements[id].divColor = \"isPositiveStatement\";\n    statements[id].sortValue = 111;\n    statements[id].greenChecked = true;\n    statements[id].pinkChecked = false;\n    statements[id].yellowChecked = false;\n  }\n  if (colorType === \"yellow\") {\n    statements[id].cardColor = \"yellowSortCard\";\n    statements[id].divColor = \"isUncertainStatement\";\n    statements[id].pinkChecked = false;\n    statements[id].yellowChecked = true;\n    statements[id].greenChecked = false;\n    statements[id].sortValue = 222;\n  }\n  if (colorType === \"pink\") {\n    statements[id].cardColor = \"pinkSortCard\";\n    statements[id].divColor = \"isNegativeStatement\";\n    statements[id].pinkChecked = true;\n    statements[id].yellowChecked = false;\n    statements[id].greenChecked = false;\n    statements[id].sortValue = 333;\n  }\n  columnStatements.statements = [...statements];\n  //   store.dispatch.setColumnStatements(columnStatements);\n  localStorage.setItem(\"columnStatements\", JSON.stringify(columnStatements));\n  forceUpdate();\n};\n\nfunction StatementList(props) {\n  // const columnStatements = useStore(state => state.columnStatements);\n  // console.log(\n  //   \"TCL: StatementList -> columnStatements\",\n  //   JSON.stringify(columnStatements)\n  // );\n\n  const { columnStatements } = props;\n  const { statementList } = columnStatements; // useStore(state => state.columnStatements.statementList);\n  // const statementList = columnStatements.statementList;\n  return (\n    <div className=\"is-scrollable listDiv\">\n      {statementList.map((item, index) => (\n        <div\n          id={index}\n          key={item.statement}\n          className={`level levelDiv ${item.divColor}`}\n        >\n          <div\n            className=\"is-pulled-left\"\n            style={{ display: \"flex\", marginRight: 25 }}\n          >\n            <NegativeButton\n              index={index}\n              border={item.pinkChecked}\n              key={`${item.statement}-pink`}\n              onClick={e => {\n                handleClickNewButton(\n                  e,\n                  props.forceUpdate,\n                  props.columnStatements\n                );\n              }}\n            />\n            <UncertainButton\n              index={index}\n              border={item.yellowChecked}\n              key={`${item.statement}-yellow`}\n              onClick={e => {\n                handleClickNewButton(\n                  e,\n                  props.forceUpdate,\n                  props.columnStatements\n                );\n              }}\n            />\n            <PositiveButton\n              index={index}\n              border={item.greenChecked}\n              key={`${item.statement}-green`}\n              onClick={e => {\n                handleClickNewButton(\n                  e,\n                  props.forceUpdate,\n                  props.columnStatements\n                );\n              }}\n            />\n          </div>\n          <div className=\"level-item levelItemCustom\">{item.statement}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default StatementList;\n",
    "import styled, { keyframes } from 'styled-components';\nimport React, { Component } from 'react';\nimport StatementList from './StatementList';\nimport state from '../state';\n/* eslint react/prop-types: 0 */\n\nconst handleClick = () => {\n  console.log('clicked');\n  state.setState({ displayAdmin: true, displayPresort: false });\n};\n\nclass PreSort extends Component {\n  render() {\n    const forceUpdate = () => {\n      this.forceUpdate();\n    };\n    const { titleText, nextButtonText, columnStatements } = this.props;\n\n    return (\n      <PageContainer>\n        <TitleDiv>\n          <div>{titleText}</div>\n          <div>\n            <NavButStatements onClick={handleClick}>Next</NavButStatements>\n          </div>\n        </TitleDiv>\n        <StatementList\n          columnStatements={columnStatements}\n          forceUpdate={forceUpdate}\n        />\n      </PageContainer>\n    );\n  }\n}\n\nexport default PreSort;\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst PageContainer = styled.div`\n  width: 1366px;\n  height: 1004px;\n  background-color: #323232;\n  color: whitesmoke;\n  visibility: ${props => (props.out ? 'hidden' : 'visible')};\n  animation: ${props => (props.out ? fadeOut : fadeIn)} 0.2s linear;\n  transition: visibility 1s linear;\n`;\n\nconst TitleDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  margin: 0;\n  width: 100%;\n  padding-left: 50px;\n  height: 120px;\n  background: steelblue;\n  text-align: center;\n  color: white;\n  font-size: 35px;\n`;\n\nconst NavButStatements = styled.button`\n  font-family: HelveticaNeue-CondensedBlack, Arial, Helvetica, sans-serif;\n  appearance: none;\n  height: 40px;\n  width: 100px;\n  font-size: 25px;\n  margin-left: 845px;\n  margin-top: 20px;\n  color: whitesmoke;\n  background: #323232;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  border: 0px solid #666;\n  text-align: center;\n  line-height: 1em;\n\n  &:active {\n    background-color: #146a9d;\n  }\n`;\n",
    "import React, { Component } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { view } from 'react-easy-state';\nimport Admin from './Admin/Admin';\nimport Statements from './Statements/Statements';\nimport Presort from './Presort/Presort';\nimport state from './state';\n\n/* eslint react/prop-types: 0 */\n\nclass App extends Component {\n  render() {\n    const displayAdmin = state.getState('displayAdmin');\n    const displayPresort = state.getState('displayPresort');\n    const displayStatements = state.getState('displayStatements');\n    const { adminData, columnStatements, preSortData } = this.props;\n    return (\n      <PageContainer>\n        {displayAdmin && <Admin {...adminData} out={displayAdmin} />}\n        {displayStatements && (\n          <Statements\n            out={displayStatements}\n            columnStatements={columnStatements}\n          />\n        )}\n        {displayPresort && (\n          <Presort\n            {...preSortData}\n            out={displayPresort}\n            columnStatements={columnStatements}\n          />\n        )}\n      </PageContainer>\n    );\n  }\n}\n\nexport default view(App);\n\nconst PageContainer = styled.div`\n  background-color: black;\n  /* width: 1366px;\n  height: 1024px;\n  \n  padding: 20px; */\n`;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst xhttp = new XMLHttpRequest();\nlet data = {};\n\nxhttp.onreadystatechange = function() {\n  if (this.readyState === 4 && this.status === 200) {\n    // grad json user settings and push to application state\n    data = JSON.parse(xhttp.responseText);\n\n    ReactDOM.render(<App {...data} />, document.getElementById('root'));\n  }\n};\n\nxhttp.open('GET', `${process.env.PUBLIC_URL}/SETTINGS.json`, true);\nxhttp.send();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n/*\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport state from \"../src/store\";\n\nvar xhttp = new XMLHttpRequest();\nvar data = {};\n\nxhttp.onreadystatechange = function() {\n  if (this.readyState === 4 && this.status === 200) {\n    // grad json user settings and push to application state\n    data = JSON.parse(xhttp.responseText);\n    state.setState({\n      // userSettings: data,\n      statements: data.statementList\n    });\n\n    ReactDOM.render(\n      <BrowserRouter>\n        <App userData={data} />\n      </BrowserRouter>,\n      document.getElementById(\"root\")\n    );\n  }\n};\n\nxhttp.open(\"GET\", `${process.env.PUBLIC_URL}/SETTINGS.json`, true);\nxhttp.send();\n\nregisterServiceWorker();\n\n// hot module replacement\nif (module.hot && process.env.NODE_ENV !== \"production\") {\n  module.hot.accept();\n}\n*/\n"
  ],
  "sourceRoot": ""
}
